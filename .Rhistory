knitr::opts_chunk$set(echo = TRUE)
source('../../R/LDScore.R')
source('./R/LDScore.R')
source('./R/LDScore.R')
source('./R/Genetic_Correlation_class_v2.R')
source('./R/SummaryStatistics.R')
source('./R/Precsion_Matrix_Estimation.R')
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats")
sumstat.gamma = read.table("./data/HG_male.sumstats")
n = mean(sumstat.beta$N, na.rm = T)
m = mean(sumstat.gamma$N, na.rm = T)
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
sumstat.gamma = read.table("./data/HG_male.sumstats", header = T)
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
sumstat.gamma = read.table("./data/HG_male.sumstats", header = T)
n = mean(sumstat.beta$N, na.rm = T)
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
sumstat.gamma = read.table("./data/HG_male.sumstats", header = T)
n = mean(sumstat.beta$N, na.rm = T)
m = mean(sumstat.gamma$N, na.rm = T)
load("P:/GeCr/Magic/RFinal/Templist_Split_validate.Rdata")
load("P:/GeCr/SImulation_v2/BlockThresh/Templist08-all.Rdata")
load("P:/GeCr/SImulation_v2/BlockThresh/Templist.Rdata")
snp.block.non.zero = ((lapply(Templist, '[[', 2) %>% lapply(length)) >0)
snplist = lapply(Templist, '[[', 2)[snp.block.non.zero] %>%  unlist
load("P:/GeCr/Magic/RFinal/Templist_Split_validate_08.Rdata")
snp.block.non.zero = ((lapply(Templist, '[[', 3) %>% lapply(length)) >0)
SIGMA = lapply(Templist, '[[', 2)[snp.block.non.zero] %>%  bdiag
library(Matrix)
snp.block.non.zero = ((lapply(Templist, '[[', 3) %>% lapply(length)) >0)
SIGMA = lapply(Templist, '[[', 2)[snp.block.non.zero] %>%  bdiag
Omega0 = lapply(Templist, '[[', 1)[snp.block.non.zero] %>%  bdiag
saveRDS(SIGMA, file = "./data/SIGMA.rds")
saveRDS(Omega0, file = "./data/Omega0.rds")
source('./R/LDScore.R')
source('./R/Genetic_Correlation_class_v2.R')
source('./R/SummaryStatistics.R')
source('./R/Precsion_Matrix_Estimation.R')
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
sumstat.gamma = read.table("./data/HG_male.sumstats", header = T)
n = mean(sumstat.beta$N, na.rm = T)
m = mean(sumstat.gamma$N, na.rm = T)
# convert to beta_mg and gamma_mg
beta.mg = Z.to.Mg(sumstat.beta$Z, n = n)
source('./R/LDScore.R')
source('./R/Genetic_Correlation_class_v2.R')
source('./R/SummaryStatistics.R')
source('./R/Precsion_Matrix_Estimation.R')
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
sumstat.gamma = read.table("./data/HG_male.sumstats", header = T)
n = mean(sumstat.beta$N, na.rm = T)
m = mean(sumstat.gamma$N, na.rm = T)
# convert to beta_mg and gamma_mg
beta.mg = Z.to.Mg(sumstat.beta$Z, n = n)
source('./R/LDScore.R')
source('./R/Genetic_Correlation_class_v2.R')
source('./R/SummaryStatistics.R')
source('./R/Precsion_Matrix_Estimation.R')
source('./R/Helper.R')
# read the sumstat file
sumstat.beta = read.table("./data/FG_female.sumstats", header = T)
sumstat.gamma = read.table("./data/HG_male.sumstats", header = T)
n = mean(sumstat.beta$N, na.rm = T)
m = mean(sumstat.gamma$N, na.rm = T)
# convert to beta_mg and gamma_mg
beta.mg = Z.to.Mg(sumstat.beta$Z, n = n)
gamma_mg = Z.to.Mg(sumstat.gamma$Z, n = m)
# Omega0, SIGMA #  LD matrix calculated from the external genotype data
SIGMA = readRDS("./data/SIGMA.rds")
Omega0 = readRDS("./data/Omega0.rds")
# Inititate the estimation object
GeCor.Analysis = GeCov$new(Beta_mg = beta_mg,
Gamma_mg = gamma_mg,
N1 = n,
N2 = m)
beta_mg = Z.to.Mg(sumstat.beta$Z, n = n)
# Inititate the estimation object
GeCor.Analysis = GeCov$new(Beta_mg = beta_mg,
Gamma_mg = gamma_mg,
N1 = n,
N2 = m)
# plug-in the external Omega and Sigma
# Estimation
GeCor.Analysis$Estimation(Omega = Omega0, Sigma = SIGMA, Type = "proposed")
# plug-in the external Omega and Sigma
# Estimation
GeCor.Analysis$Estimation(Omega = Omega0, Sigma = SIGMA, Type = "proposed")
# variance
GeCor.Analysis$Var.Est(TRUE)
# print out the result
print(GeCor.Analysis)
ldscore = read.table("./data/simu.l2.ldscore")
